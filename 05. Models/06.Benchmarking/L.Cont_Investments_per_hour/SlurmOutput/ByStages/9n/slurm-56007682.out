SLURM_JOB_ID: 56007682
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: 9n_by_stages_loop_L_1-400
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r23i27n05
SLURM_JOB_CPUS_PER_NODE: 12
Date: Fri Apr 12 22:43:00 CEST 2024
Walltime: 00-06:00:00
========================================================================
Activation OK
Starting runs
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc10
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc10']
Namespace(case='9n_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 95.52854659761891
  Upper bound: 96.14284549895788
  Number of objectives: 1
  Number of constraints: 2623
  Number of variables: 1412
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 1376
  Number of nonzeros: 7904
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.7522189617156982
  Error rc: 0
  Time: 1.2078347206115723
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 96.14284549895785
  Upper bound: 96.14284549895785
  Number of objectives: 1
  Number of constraints: 2623
  Number of variables: 1376
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 1376
  Number of nonzeros: 6428
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.00945591926574707
  Error rc: 0
  Time: 0.11831331253051758
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  2 s
Objective function value                   96.14 Mâ‚¬
Objective function value                   96.14284549895785
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 3 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc20
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc20']
Namespace(case='9n_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 84.26320003397447
  Upper bound: 84.64897473316012
  Number of objectives: 1
  Number of constraints: 5243
  Number of variables: 2784
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 2748
  Number of nonzeros: 15780
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.9342539310455322
  Error rc: 0
  Time: 1.1018164157867432
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 84.64897473316026
  Upper bound: 84.64897473316026
  Number of objectives: 1
  Number of constraints: 5243
  Number of variables: 2748
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 2748
  Number of nonzeros: 12864
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.01638197898864746
  Error rc: 0
  Time: 0.1682114601135254
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  2 s
Objective function value                   84.65 Mâ‚¬
Objective function value                   84.64897473316026
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 3 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc30
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc30']
Namespace(case='9n_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 99.07451582767916
  Upper bound: 99.9442199354049
  Number of objectives: 1
  Number of constraints: 7863
  Number of variables: 4147
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 4111
  Number of nonzeros: 23629
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.6715879440307617
  Error rc: 0
  Time: 0.8423507213592529
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 99.94421993540487
  Upper bound: 99.94421993540487
  Number of objectives: 1
  Number of constraints: 7863
  Number of variables: 4111
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 4111
  Number of nonzeros: 19273
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.022475004196166992
  Error rc: 0
  Time: 0.19215822219848633
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  2 s
Objective function value                   99.94 Mâ‚¬
Objective function value                   99.94421993540487
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 4 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc40
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc40']
Namespace(case='9n_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 105.07065936300474
  Upper bound: 106.00801225489386
  Number of objectives: 1
  Number of constraints: 10483
  Number of variables: 5528
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 5492
  Number of nonzeros: 31532
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.04811692237854
  Error rc: 0
  Time: 1.2289319038391113
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 106.00801225489394
  Upper bound: 106.00801225489394
  Number of objectives: 1
  Number of constraints: 10483
  Number of variables: 5492
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 5492
  Number of nonzeros: 25736
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.029237985610961914
  Error rc: 0
  Time: 0.21157550811767578
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  3 s
Objective function value                   106.01 Mâ‚¬
Objective function value                   106.00801225489394
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 6 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc50
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc50']
Namespace(case='9n_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 97.87294370617333
  Upper bound: 98.66659762092041
  Number of objectives: 1
  Number of constraints: 13103
  Number of variables: 6900
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 6864
  Number of nonzeros: 39408
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.4282770156860352
  Error rc: 0
  Time: 1.6276710033416748
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 98.66659762092044
  Upper bound: 98.66659762092044
  Number of objectives: 1
  Number of constraints: 13103
  Number of variables: 6864
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 6864
  Number of nonzeros: 32172
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.03759288787841797
  Error rc: 0
  Time: 0.24803733825683594
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  4 s
Objective function value                   98.67 Mâ‚¬
Objective function value                   98.66659762092044
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 8 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc60
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc60']
Namespace(case='9n_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  2 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 98.26544904172343
  Upper bound: 98.26544904172343
  Number of objectives: 1
  Number of constraints: 15723
  Number of variables: 8269
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 8233
  Number of nonzeros: 47275
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.9606809616088867
  Error rc: 0
  Time: 2.1791720390319824
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 98.26544904172344
  Upper bound: 98.26544904172344
  Number of objectives: 1
  Number of constraints: 15723
  Number of variables: 8233
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 8233
  Number of nonzeros: 38599
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.050212860107421875
  Error rc: 0
  Time: 0.28798604011535645
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  6 s
Objective function value                   98.27 Mâ‚¬
Objective function value                   98.26544904172344
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 10 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc70
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc70']
Namespace(case='9n_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  3 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 104.84095305210985
  Upper bound: 105.59927072605066
  Number of objectives: 1
  Number of constraints: 18343
  Number of variables: 9641
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 9605
  Number of nonzeros: 55151
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.5085837841033936
  Error rc: 0
  Time: 1.731520652770996
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 105.59927072605066
  Upper bound: 105.59927072605066
  Number of objectives: 1
  Number of constraints: 18343
  Number of variables: 9605
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 9605
  Number of nonzeros: 45035
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.052999019622802734
  Error rc: 0
  Time: 0.2881031036376953
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  6 s
Objective function value                   105.6 Mâ‚¬
Objective function value                   105.59927072605066
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 12 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc80
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc80']
Namespace(case='9n_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  4 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 101.3118153037
  Upper bound: 102.14271132726647
  Number of objectives: 1
  Number of constraints: 20963
  Number of variables: 11016
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 10980
  Number of nonzeros: 63036
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 2.079179048538208
  Error rc: 0
  Time: 2.347097635269165
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 102.1427113272664
  Upper bound: 102.1427113272664
  Number of objectives: 1
  Number of constraints: 20963
  Number of variables: 10980
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 10980
  Number of nonzeros: 51480
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.06514501571655273
  Error rc: 0
  Time: 0.3349947929382324
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  8 s
Objective function value                   102.14 Mâ‚¬
Objective function value                   102.1427113272664
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 15 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc90
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc90']
Namespace(case='9n_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  4 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 100.97967757876232
  Upper bound: 101.61718072431816
  Number of objectives: 1
  Number of constraints: 23583
  Number of variables: 12391
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 12355
  Number of nonzeros: 70921
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.7983660697937012
  Error rc: 0
  Time: 2.0548808574676514
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 101.61718072431823
  Upper bound: 101.61718072431823
  Number of objectives: 1
  Number of constraints: 23583
  Number of variables: 12355
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 12355
  Number of nonzeros: 57925
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.06823921203613281
  Error rc: 0
  Time: 0.3463432788848877
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  9 s
Objective function value                   101.62 Mâ‚¬
Objective function value                   101.61718072431823
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 18 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc100
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc100']
Namespace(case='9n_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  5 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 104.07008063044412
  Upper bound: 105.0531239516705
  Number of objectives: 1
  Number of constraints: 26203
  Number of variables: 13775
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 13739
  Number of nonzeros: 78833
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.9405958652496338
  Error rc: 0
  Time: 2.2100632190704346
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 105.0531239516705
  Upper bound: 105.0531239516705
  Number of objectives: 1
  Number of constraints: 26203
  Number of variables: 13739
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 13739
  Number of nonzeros: 64397
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.07036805152893066
  Error rc: 0
  Time: 0.35135531425476074
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  10 s
Objective function value                   105.05 Mâ‚¬
Objective function value                   105.0531239516705
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 21 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc150
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc150']
Namespace(case='9n_ByStages_nc150', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc150', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  2 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  5 s
Generating network    constraints     ...  12 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 103.42178274439642
  Upper bound: 103.42178274439642
  Number of objectives: 1
  Number of constraints: 39303
  Number of variables: 20652
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 20616
  Number of nonzeros: 118264
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 4.16159987449646
  Error rc: 0
  Time: 4.487071752548218
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 103.42178274439644
  Upper bound: 103.42178274439644
  Number of objectives: 1
  Number of constraints: 39303
  Number of variables: 20616
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 20616
  Number of nonzeros: 96628
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.11089706420898438
  Error rc: 0
  Time: 0.46784496307373047
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  21 s
Objective function value                   103.42 Mâ‚¬
Objective function value                   103.42178274439644
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 44 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc200
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc200']
Namespace(case='9n_ByStages_nc200', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc200', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  4 s
Generating generation capacity        ...  2 s
Generating network    capacity        ...  8 s
Generating network    constraints     ...  21 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 100.89192553291822
  Upper bound: 101.55173587949047
  Number of objectives: 1
  Number of constraints: 52403
  Number of variables: 27505
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 27469
  Number of nonzeros: 157623
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 5.264803886413574
  Error rc: 0
  Time: 5.699800968170166
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 101.55173587949176
  Upper bound: 101.55173587949176
  Number of objectives: 1
  Number of constraints: 52403
  Number of variables: 27469
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 27469
  Number of nonzeros: 128787
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.13880109786987305
  Error rc: 0
  Time: 0.5782766342163086
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  34 s
Objective function value                   101.55 Mâ‚¬
Objective function value                   101.55173587949176
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 72 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc250
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc250']
Namespace(case='9n_ByStages_nc250', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc250', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  5 s
Generating generation capacity        ...  4 s
Generating network    capacity        ...  13 s
Generating network    constraints     ...  33 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 104.99849256058383
  Upper bound: 105.0505098186688
  Number of objectives: 1
  Number of constraints: 65503
  Number of variables: 34407
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 34371
  Number of nonzeros: 197129
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 6.284938097000122
  Error rc: 0
  Time: 6.770211935043335
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 105.0505098186692
  Upper bound: 105.0505098186692
  Number of objectives: 1
  Number of constraints: 65503
  Number of variables: 34371
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 34371
  Number of nonzeros: 161093
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.17873311042785645
  Error rc: 0
  Time: 0.7004740238189697
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  50 s
Objective function value                   105.05 Mâ‚¬
Objective function value                   105.0505098186692
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 108 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc300
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc300']
Namespace(case='9n_ByStages_nc300', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc300', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  8 s
Generating generation capacity        ...  6 s
Generating network    capacity        ...  18 s
Generating network    constraints     ...  47 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 101.12166932293093
  Upper bound: 101.18649941908609
  Number of objectives: 1
  Number of constraints: 78603
  Number of variables: 41265
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 41229
  Number of nonzeros: 236503
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 7.289918899536133
  Error rc: 0
  Time: 7.866227149963379
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 101.1864994190865
  Upper bound: 101.1864994190865
  Number of objectives: 1
  Number of constraints: 78603
  Number of variables: 41229
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 41229
  Number of nonzeros: 193267
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.21282696723937988
  Error rc: 0
  Time: 0.8280727863311768
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  70 s
Objective function value                   101.19 Mâ‚¬
Objective function value                   101.1864994190865
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 152 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc350
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc350']
Namespace(case='9n_ByStages_nc350', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc350', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  11 s
Generating generation capacity        ...  7 s
Generating network    capacity        ...  24 s
Generating network    constraints     ...  64 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 102.28166503213586
  Upper bound: 102.98911158886823
  Number of objectives: 1
  Number of constraints: 91703
  Number of variables: 48133
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 48097
  Number of nonzeros: 275907
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 8.377833843231201
  Error rc: 0
  Time: 8.99968671798706
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 102.9891115893553
  Upper bound: 102.9891115893553
  Number of objectives: 1
  Number of constraints: 91703
  Number of variables: 48097
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 48097
  Number of nonzeros: 225471
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.25408315658569336
  Error rc: 0
  Time: 0.9547305107116699
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  92 s
Objective function value                   102.99 Mâ‚¬
Objective function value                   102.9891115893553
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 203 seconds
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:621: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearOperCost.update (pd.Series([0 for gg in model.gg if pLinearOperCost [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearOperCost [gg] < pEpsilon]))
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour/oSN_Main_DCOPF.py:622: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  pLinearVarCost.update  (pd.Series([0 for gg in model.gg if pLinearVarCost  [gg] < pEpsilon], index=[gg for gg in model.gg if pLinearVarCost  [gg] < pEpsilon]))

 #### Academic research license - for non-commercial use only #### 

9n_ByStages_nc400
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', '9n_ByStages_nc400']
Namespace(case='9n_ByStages_nc400', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Namespace(case='9n_ByStages_nc400', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/L.Cont_Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  14 s
Generating generation capacity        ...  10 s
Generating network    capacity        ...  32 s
Generating network    constraints     ...  84 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 102.56143631750089
  Upper bound: 102.68549819649367
  Number of objectives: 1
  Number of constraints: 104803
  Number of variables: 55011
  Number of binary variables: 36
  Number of integer variables: 36
  Number of continuous variables: 54975
  Number of nonzeros: 315341
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 9.825430870056152
  Error rc: 0
  Time: 10.543962717056274
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,Node_4,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_2,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_6,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_3,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac1]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac1]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_2,Node_3,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac2]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac1]
fixing: vNetworkInvest[2030,Node_4,Node_5,cac3]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac2]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac2]
fixing: vNetworkInvest[2030,Node_6,Node_7,cac3]
fixing: vNetworkInvest[2030,Node_8,Node_9,cac3]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac2]
fixing: vNetworkInvest[2030,Node_7,Node_8,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac2]
fixing: vNetworkInvest[2030,Node_4,Node_9,cac1]
fixing: vNetworkInvest[2030,Node_1,Node_6,cac3]
fixing: vNetworkInvest[2030,Node_3,Node_4,cac3]
Number of fixed variables:  36
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 102.68549819678586
  Upper bound: 102.68549819678586
  Number of objectives: 1
  Number of constraints: 104803
  Number of variables: 54975
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 54975
  Number of nonzeros: 257705
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.28851914405822754
  Error rc: 0
  Time: 1.1010801792144775
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  119 s
Objective function value                   102.69 Mâ‚¬
Objective function value                   102.68549819678586
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Writing             economic results  ...  0 s

 #### Academic research license - for non-commercial use only #### 

Elapsed time: 264 seconds
['9n_ByStages_nc10', '9n_ByStages_nc20', '9n_ByStages_nc30', '9n_ByStages_nc40', '9n_ByStages_nc50', '9n_ByStages_nc60', '9n_ByStages_nc70', '9n_ByStages_nc80', '9n_ByStages_nc90', '9n_ByStages_nc100', '9n_ByStages_nc150', '9n_ByStages_nc200', '9n_ByStages_nc250', '9n_ByStages_nc300', '9n_ByStages_nc350', '9n_ByStages_nc400']
python oSN_Main_DCOPF.py --case 9n_ByStages_nc10
python oSN_Main_DCOPF.py --case 9n_ByStages_nc20
python oSN_Main_DCOPF.py --case 9n_ByStages_nc30
python oSN_Main_DCOPF.py --case 9n_ByStages_nc40
python oSN_Main_DCOPF.py --case 9n_ByStages_nc50
python oSN_Main_DCOPF.py --case 9n_ByStages_nc60
python oSN_Main_DCOPF.py --case 9n_ByStages_nc70
python oSN_Main_DCOPF.py --case 9n_ByStages_nc80
python oSN_Main_DCOPF.py --case 9n_ByStages_nc90
python oSN_Main_DCOPF.py --case 9n_ByStages_nc100
python oSN_Main_DCOPF.py --case 9n_ByStages_nc150
python oSN_Main_DCOPF.py --case 9n_ByStages_nc200
python oSN_Main_DCOPF.py --case 9n_ByStages_nc250
python oSN_Main_DCOPF.py --case 9n_ByStages_nc300
python oSN_Main_DCOPF.py --case 9n_ByStages_nc350
python oSN_Main_DCOPF.py --case 9n_ByStages_nc400
