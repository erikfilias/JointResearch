SLURM_JOB_ID: 56096904
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: RTS24_mod1_by_stages_loop_D_300-400
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r22i13n07
SLURM_JOB_CPUS_PER_NODE: 36
Date: Mon Apr 15 08:51:10 CEST 2024
Walltime: 01-12:00:00
========================================================================
Activation OK
Starting runs

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc300
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc300']
Namespace(case='RTS24_mod1_ByStages_nc300', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc300', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  4 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  14 s
Generating generation capacity        ...  13 s
Generating network    capacity        ...  19 s
Generating network    constraints     ...  50 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 83.40707942674332
  Upper bound: 83.40707942674332
  Number of objectives: 1
  Number of constraints: 106503
  Number of variables: 71933
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 71912
  Number of nonzeros: 290468
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 518.0540359020233
  Error rc: 0
  Time: 519.0809781551361
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 83.40707942674364
  Upper bound: 83.40707942674364
  Number of objectives: 1
  Number of constraints: 106503
  Number of variables: 71912
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 71912
  Number of nonzeros: 265247
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.6222939491271973
  Error rc: 0
  Time: 1.5287516117095947
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  594 s
Objective function value                   83.41 Mâ‚¬
Objective function value                   83.40707942674364
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc350
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc350']
Namespace(case='RTS24_mod1_ByStages_nc350', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc350', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  5 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  18 s
Generating generation capacity        ...  17 s
Generating network    capacity        ...  26 s
Generating network    constraints     ...  69 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 85.69374232739163
  Upper bound: 85.69374232739167
  Number of objectives: 1
  Number of constraints: 124253
  Number of variables: 83887
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 83866
  Number of nonzeros: 338789
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1152.890081167221
  Error rc: 0
  Time: 1154.113634109497
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 85.69374232739175
  Upper bound: 85.69374232739175
  Number of objectives: 1
  Number of constraints: 124253
  Number of variables: 83866
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 83866
  Number of nonzeros: 309368
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.6572489738464355
  Error rc: 0
  Time: 1.7399485111236572
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  1254 s
Objective function value                   85.69 Mâ‚¬
Objective function value                   85.69374232739175
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc400
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc400']
Namespace(case='RTS24_mod1_ByStages_nc400', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc400', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  6 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  24 s
Generating generation capacity        ...  22 s
Generating network    capacity        ...  34 s
Generating network    constraints     ...  91 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 83.19439681807692
  Upper bound: 83.19439681807694
  Number of objectives: 1
  Number of constraints: 142003
  Number of variables: 95866
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 95845
  Number of nonzeros: 387183
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 924.7367479801178
  Error rc: 0
  Time: 926.1194250583649
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 83.19439681807708
  Upper bound: 83.19439681807708
  Number of objectives: 1
  Number of constraints: 142003
  Number of variables: 95845
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 95845
  Number of nonzeros: 353562
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.006011962890625
  Error rc: 0
  Time: 2.191392183303833
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  1056 s
Objective function value                   83.19 Mâ‚¬
Objective function value                   83.19439681807708
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list
['RTS24_mod1_ByStages_nc300', 'RTS24_mod1_ByStages_nc350', 'RTS24_mod1_ByStages_nc400']
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc300
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc350
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc400
