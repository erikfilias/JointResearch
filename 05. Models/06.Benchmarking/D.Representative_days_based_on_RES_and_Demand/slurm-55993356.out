SLURM_JOB_ID: 55993356
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: RTS24_by_stages_loop_D
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r27i13n02
SLURM_JOB_CPUS_PER_NODE: 36
Date: Wed Apr 10 21:51:31 CEST 2024
Walltime: 00-10:00:00
========================================================================
Activation OK
Starting runs

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc10
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc10']
Namespace(case='RTS24_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 192.63279820435434
  Upper bound: 193.55929449423985
  Number of objectives: 1
  Number of constraints: 3893
  Number of variables: 2432
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 2402
  Number of nonzeros: 10615
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 16.58953595161438
  Error rc: 0
  Time: 16.883992671966553
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 193.55930220502822
  Upper bound: 193.55930220502822
  Number of objectives: 1
  Number of constraints: 3893
  Number of variables: 2402
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 2402
  Number of nonzeros: 9385
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.019927978515625
  Error rc: 0
  Time: 0.1486964225769043
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  17 s
Objective function value                   193.56 Mâ‚¬
Objective function value                   193.55930220502822
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc20
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc20']
Namespace(case='RTS24_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 221.13118007087186
  Upper bound: 222.5892040116684
  Number of objectives: 1
  Number of constraints: 7783
  Number of variables: 4791
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 4761
  Number of nonzeros: 21102
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 30.577096939086914
  Error rc: 0
  Time: 30.785924911499023
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 222.58920401166878
  Upper bound: 222.58920401166878
  Number of objectives: 1
  Number of constraints: 7783
  Number of variables: 4761
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 4761
  Number of nonzeros: 18672
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.03751993179321289
  Error rc: 0
  Time: 0.19628047943115234
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  32 s
Objective function value                   222.59 Mâ‚¬
Objective function value                   222.58920401166878
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc30
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc30']
Namespace(case='RTS24_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 218.19987761150185
  Upper bound: 218.5075976722992
  Number of objectives: 1
  Number of constraints: 11673
  Number of variables: 7185
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 7155
  Number of nonzeros: 31694
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 64.84213209152222
  Error rc: 0
  Time: 65.08335614204407
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 218.50759767229914
  Upper bound: 218.50759767229914
  Number of objectives: 1
  Number of constraints: 11673
  Number of variables: 7155
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 7155
  Number of nonzeros: 28064
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.05097198486328125
  Error rc: 0
  Time: 0.24721980094909668
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  67 s
Objective function value                   218.51 Mâ‚¬
Objective function value                   218.50759767229914
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc40
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc40']
Namespace(case='RTS24_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 229.2397199743122
  Upper bound: 230.99505116870773
  Number of objectives: 1
  Number of constraints: 15563
  Number of variables: 9517
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 9487
  Number of nonzeros: 42100
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 69.53463196754456
  Error rc: 0
  Time: 69.81358432769775
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 230.99505116870782
  Upper bound: 230.99505116870782
  Number of objectives: 1
  Number of constraints: 15563
  Number of variables: 9487
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 9487
  Number of nonzeros: 37270
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.07345199584960938
  Error rc: 0
  Time: 0.29323887825012207
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  72 s
Objective function value                   231.0 Mâ‚¬
Objective function value                   230.99505116870782
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc50
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc50']
Namespace(case='RTS24_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  2 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 230.46912586384448
  Upper bound: 232.7084178747063
  Number of objectives: 1
  Number of constraints: 19453
  Number of variables: 11907
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 11877
  Number of nonzeros: 52680
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 94.17253398895264
  Error rc: 0
  Time: 94.47143149375916
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 232.70841787470647
  Upper bound: 232.70841787470647
  Number of objectives: 1
  Number of constraints: 19453
  Number of variables: 11877
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 11877
  Number of nonzeros: 46650
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.08363795280456543
  Error rc: 0
  Time: 0.3210334777832031
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  98 s
Objective function value                   232.71 Mâ‚¬
Objective function value                   232.70841787470647
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc60
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc60']
Namespace(case='RTS24_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  3 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 231.11136550929456
  Upper bound: 231.82743481899465
  Number of objectives: 1
  Number of constraints: 23343
  Number of variables: 14272
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 14242
  Number of nonzeros: 63185
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 151.18302202224731
  Error rc: 0
  Time: 151.52700877189636
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 231.8274348189949
  Upper bound: 231.8274348189949
  Number of objectives: 1
  Number of constraints: 23343
  Number of variables: 14242
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 14242
  Number of nonzeros: 55955
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.10792803764343262
  Error rc: 0
  Time: 0.36357808113098145
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  156 s
Objective function value                   231.83 Mâ‚¬
Objective function value                   231.8274348189949
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc70
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc70']
Namespace(case='RTS24_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  3 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 233.76312207782402
  Upper bound: 235.29601312555891
  Number of objectives: 1
  Number of constraints: 27233
  Number of variables: 16672
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 16642
  Number of nonzeros: 73795
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 179.9899480342865
  Error rc: 0
  Time: 180.43300366401672
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 235.29601312555874
  Upper bound: 235.29601312555874
  Number of objectives: 1
  Number of constraints: 27233
  Number of variables: 16642
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 16642
  Number of nonzeros: 65365
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.10277605056762695
  Error rc: 0
  Time: 0.4053473472595215
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  186 s
Objective function value                   235.3 Mâ‚¬
Objective function value                   235.29601312555874
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc80
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc80']
Namespace(case='RTS24_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  4 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 232.1357401549264
  Upper bound: 234.03966741770233
  Number of objectives: 1
  Number of constraints: 31123
  Number of variables: 19052
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 19022
  Number of nonzeros: 84345
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 218.75184082984924
  Error rc: 0
  Time: 219.15465307235718
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 234.03966741770247
  Upper bound: 234.03966741770247
  Number of objectives: 1
  Number of constraints: 31123
  Number of variables: 19022
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 19022
  Number of nonzeros: 74715
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.13851284980773926
  Error rc: 0
  Time: 0.45479607582092285
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  227 s
Objective function value                   234.04 Mâ‚¬
Objective function value                   234.03966741770247
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc90
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc90']
Namespace(case='RTS24_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  6 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 232.2541624213517
  Upper bound: 234.35055183054814
  Number of objectives: 1
  Number of constraints: 35013
  Number of variables: 21447
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 21417
  Number of nonzeros: 94940
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 299.07840514183044
  Error rc: 0
  Time: 299.5150845050812
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 234.35055183054914
  Upper bound: 234.35055183054914
  Number of objectives: 1
  Number of constraints: 35013
  Number of variables: 21417
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 21417
  Number of nonzeros: 84110
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.13924694061279297
  Error rc: 0
  Time: 0.49043989181518555
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  309 s
Objective function value                   234.35 Mâ‚¬
Objective function value                   234.35055183054914
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc100
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc100']
Namespace(case='RTS24_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  2 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  3 s
Generating network    constraints     ...  7 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 230.9509874457725
  Upper bound: 233.04192606823688
  Number of objectives: 1
  Number of constraints: 38903
  Number of variables: 23848
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 23818
  Number of nonzeros: 105553
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 254.1087131500244
  Error rc: 0
  Time: 254.7537751197815
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 233.04192606823628
  Upper bound: 233.04192606823628
  Number of objectives: 1
  Number of constraints: 38903
  Number of variables: 23818
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 23818
  Number of nonzeros: 93523
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.16282296180725098
  Error rc: 0
  Time: 0.5277085304260254
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  266 s
Objective function value                   233.04 Mâ‚¬
Objective function value                   233.04192606823628
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc150
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc150']
Namespace(case='RTS24_ByStages_nc150', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc150', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  4 s
Generating generation capacity        ...  3 s
Generating network    capacity        ...  6 s
Generating network    constraints     ...  15 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 229.56818649217414
  Upper bound: 231.22150539659557
  Number of objectives: 1
  Number of constraints: 58353
  Number of variables: 35692
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 35662
  Number of nonzeros: 158135
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 636.1454961299896
  Error rc: 0
  Time: 636.8126859664917
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 231.22150539659455
  Upper bound: 231.22150539659455
  Number of objectives: 1
  Number of constraints: 58353
  Number of variables: 35662
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 35662
  Number of nonzeros: 140105
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.24019908905029297
  Error rc: 0
  Time: 0.7486560344696045
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  660 s
Objective function value                   231.22 Mâ‚¬
Objective function value                   231.22150539659455
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc200
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc200']
Namespace(case='RTS24_ByStages_nc200', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc200', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  6 s
Generating generation capacity        ...  6 s
Generating network    capacity        ...  10 s
Generating network    constraints     ...  27 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 230.71644446883374
  Upper bound: 231.67773895525906
  Number of objectives: 1
  Number of constraints: 77803
  Number of variables: 47678
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 47648
  Number of nonzeros: 211143
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1355.2483990192413
  Error rc: 0
  Time: 1356.0264377593994
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 231.67773895525832
  Upper bound: 231.67773895525832
  Number of objectives: 1
  Number of constraints: 77803
  Number of variables: 47648
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 47648
  Number of nonzeros: 187113
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.3629491329193115
  Error rc: 0
  Time: 0.9895563125610352
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  1396 s
Objective function value                   231.68 Mâ‚¬
Objective function value                   231.67773895525832
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_ByStages_nc250
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_ByStages_nc250']
Namespace(case='RTS24_ByStages_nc250', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Namespace(case='RTS24_ByStages_nc250', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  10 s
Generating generation capacity        ...  9 s
Generating network    capacity        ...  16 s
Generating network    constraints     ...  41 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 228.85652958320367
  Upper bound: 231.0197839624702
  Number of objectives: 1
  Number of constraints: 97253
  Number of variables: 59588
  Number of binary variables: 30
  Number of integer variables: 30
  Number of continuous variables: 59558
  Number of nonzeros: 263923
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1584.9258079528809
  Error rc: 0
  Time: 1585.9082305431366
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_113,N_123,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_107,N_108,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_113,N_123,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_107,N_108,cac3]
fixing: vNetworkInvest[2030,N_117,N_122,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_122,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_113,N_123,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
Number of fixed variables:  30
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 231.01978396247023
  Upper bound: 231.01978396247023
  Number of objectives: 1
  Number of constraints: 97253
  Number of variables: 59558
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 59558
  Number of nonzeros: 233893
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.44668102264404297
  Error rc: 0
  Time: 1.2102274894714355
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  1646 s
Objective function value                   231.02 Mâ‚¬
Objective function value                   231.01978396247023
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/D.Representative_days_based_on_RES_and_Demand/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list
['RTS24_ByStages_nc10', 'RTS24_ByStages_nc20', 'RTS24_ByStages_nc30', 'RTS24_ByStages_nc40', 'RTS24_ByStages_nc50', 'RTS24_ByStages_nc60', 'RTS24_ByStages_nc70', 'RTS24_ByStages_nc80', 'RTS24_ByStages_nc90', 'RTS24_ByStages_nc100', 'RTS24_ByStages_nc150', 'RTS24_ByStages_nc200', 'RTS24_ByStages_nc250']
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc10
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc20
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc30
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc40
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc50
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc60
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc70
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc80
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc90
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc100
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc150
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc200
python oSN_Main_DCOPF.py --case RTS24_ByStages_nc250
