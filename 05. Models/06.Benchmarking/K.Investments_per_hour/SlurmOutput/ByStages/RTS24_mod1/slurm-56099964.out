SLURM_JOB_ID: 56099964
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: RTS24_mod1_by_stages_loop_K_10-250
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r26i13n10
SLURM_JOB_CPUS_PER_NODE: 36
Date: Mon Apr 15 15:13:02 CEST 2024
Walltime: 00-06:00:00
========================================================================
Activation OK
Starting runs

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc10
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc10']
Namespace(case='RTS24_mod1_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 41.80462786483883
  Upper bound: 41.80462786483883
  Number of objectives: 1
  Number of constraints: 3553
  Number of variables: 2409
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 2388
  Number of nonzeros: 9650
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 5.451035976409912
  Error rc: 0
  Time: 5.914028167724609
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 41.80462786483882
  Upper bound: 41.80462786483882
  Number of objectives: 1
  Number of constraints: 3553
  Number of variables: 2388
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 2388
  Number of nonzeros: 8789
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.020446062088012695
  Error rc: 0
  Time: 0.1642909049987793
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  6 s
Objective function value                   41.8 Mâ‚¬
Objective function value                   41.80462786483882
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc20
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc20']
Namespace(case='RTS24_mod1_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 58.403501101147214
  Upper bound: 58.403501101147214
  Number of objectives: 1
  Number of constraints: 7103
  Number of variables: 4795
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 4774
  Number of nonzeros: 19303
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 5.19196891784668
  Error rc: 0
  Time: 5.372075080871582
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 58.40350110114718
  Upper bound: 58.40350110114718
  Number of objectives: 1
  Number of constraints: 7103
  Number of variables: 4774
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 4774
  Number of nonzeros: 17602
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.03923201560974121
  Error rc: 0
  Time: 0.2113511562347412
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  6 s
Objective function value                   58.4 Mâ‚¬
Objective function value                   58.40350110114718
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc30
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc30']
Namespace(case='RTS24_mod1_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 62.62041169173439
  Upper bound: 62.62041169173439
  Number of objectives: 1
  Number of constraints: 10653
  Number of variables: 7197
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 7176
  Number of nonzeros: 29006
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 11.6647469997406
  Error rc: 0
  Time: 11.924526929855347
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 62.620411691734596
  Upper bound: 62.620411691734596
  Number of objectives: 1
  Number of constraints: 10653
  Number of variables: 7176
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 7176
  Number of nonzeros: 26465
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.05502510070800781
  Error rc: 0
  Time: 0.2523367404937744
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  13 s
Objective function value                   62.62 Mâ‚¬
Objective function value                   62.620411691734596
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc40
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc40']
Namespace(case='RTS24_mod1_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 64.82355172490435
  Upper bound: 64.82355172490435
  Number of objectives: 1
  Number of constraints: 14203
  Number of variables: 9603
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 9582
  Number of nonzeros: 38716
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 34.08330202102661
  Error rc: 0
  Time: 34.41546273231506
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 64.82355172490443
  Upper bound: 64.82355172490443
  Number of objectives: 1
  Number of constraints: 14203
  Number of variables: 9582
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 9582
  Number of nonzeros: 35335
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.07720208168029785
  Error rc: 0
  Time: 0.29778242111206055
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  37 s
Objective function value                   64.82 Mâ‚¬
Objective function value                   64.82355172490443
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc50
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc50']
Namespace(case='RTS24_mod1_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  2 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 66.99608629676283
  Upper bound: 66.99608629676283
  Number of objectives: 1
  Number of constraints: 17753
  Number of variables: 11986
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 11965
  Number of nonzeros: 48362
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 35.92109203338623
  Error rc: 0
  Time: 36.23249888420105
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 66.99608629676324
  Upper bound: 66.99608629676324
  Number of objectives: 1
  Number of constraints: 17753
  Number of variables: 11965
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 11965
  Number of nonzeros: 44141
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.09992504119873047
  Error rc: 0
  Time: 0.34931421279907227
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  39 s
Objective function value                   67.0 Mâ‚¬
Objective function value                   66.99608629676324
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc60
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc60']
Namespace(case='RTS24_mod1_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  2 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 67.4989895805654
  Upper bound: 67.4989895805654
  Number of objectives: 1
  Number of constraints: 21303
  Number of variables: 14369
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 14348
  Number of nonzeros: 57999
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 33.283753871917725
  Error rc: 0
  Time: 33.585455656051636
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 67.49898958056522
  Upper bound: 67.49898958056522
  Number of objectives: 1
  Number of constraints: 21303
  Number of variables: 14348
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 14348
  Number of nonzeros: 52938
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.11463499069213867
  Error rc: 0
  Time: 0.36974477767944336
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  38 s
Objective function value                   67.5 Mâ‚¬
Objective function value                   67.49898958056522
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc70
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc70']
Namespace(case='RTS24_mod1_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  3 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 68.38184956431978
  Upper bound: 68.38184956431978
  Number of objectives: 1
  Number of constraints: 24853
  Number of variables: 16766
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 16745
  Number of nonzeros: 67683
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 64.35288190841675
  Error rc: 0
  Time: 64.73984789848328
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 68.38184956431994
  Upper bound: 68.38184956431994
  Number of objectives: 1
  Number of constraints: 24853
  Number of variables: 16745
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 16745
  Number of nonzeros: 61782
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.13263201713562012
  Error rc: 0
  Time: 0.4199669361114502
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  70 s
Objective function value                   68.38 Mâ‚¬
Objective function value                   68.38184956431994
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc80
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc80']
Namespace(case='RTS24_mod1_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  4 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 68.02529246635714
  Upper bound: 68.02529246635714
  Number of objectives: 1
  Number of constraints: 28403
  Number of variables: 19145
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 19124
  Number of nonzeros: 77312
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 87.8480908870697
  Error rc: 0
  Time: 88.2678472995758
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 68.02529246635739
  Upper bound: 68.02529246635739
  Number of objectives: 1
  Number of constraints: 28403
  Number of variables: 19124
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 19124
  Number of nonzeros: 70571
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.1439499855041504
  Error rc: 0
  Time: 0.47879767417907715
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  95 s
Objective function value                   68.03 Mâ‚¬
Objective function value                   68.02529246635739
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc90
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc90']
Namespace(case='RTS24_mod1_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  5 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 73.47710048982799
  Upper bound: 73.477100489828
  Number of objectives: 1
  Number of constraints: 31953
  Number of variables: 21524
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 21503
  Number of nonzeros: 86941
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 68.52991890907288
  Error rc: 0
  Time: 68.94193720817566
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 73.47710087027419
  Upper bound: 73.47710087027419
  Number of objectives: 1
  Number of constraints: 31953
  Number of variables: 21503
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 21503
  Number of nonzeros: 79360
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.1572551727294922
  Error rc: 0
  Time: 0.5009670257568359
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  77 s
Objective function value                   73.48 Mâ‚¬
Objective function value                   73.47710087027419
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc100
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc100']
Namespace(case='RTS24_mod1_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  2 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  6 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 73.5460086629843
  Upper bound: 73.5460086629843
  Number of objectives: 1
  Number of constraints: 35503
  Number of variables: 23901
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 23880
  Number of nonzeros: 96568
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 42.508909940719604
  Error rc: 0
  Time: 42.915000200271606
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 73.5460086629843
  Upper bound: 73.5460086629843
  Number of objectives: 1
  Number of constraints: 35503
  Number of variables: 23880
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 23880
  Number of nonzeros: 88147
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.18227291107177734
  Error rc: 0
  Time: 0.5593788623809814
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  53 s
Objective function value                   73.55 Mâ‚¬
Objective function value                   73.5460086629843
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc150
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc150']
Namespace(case='RTS24_mod1_ByStages_nc150', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc150', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  4 s
Generating generation capacity        ...  3 s
Generating network    capacity        ...  5 s
Generating network    constraints     ...  13 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 69.17393949368841
  Upper bound: 69.17393949368842
  Number of objectives: 1
  Number of constraints: 53253
  Number of variables: 35876
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 35855
  Number of nonzeros: 144953
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 86.04044103622437
  Error rc: 0
  Time: 86.61799216270447
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 69.1739394936884
  Upper bound: 69.1739394936884
  Number of objectives: 1
  Number of constraints: 53253
  Number of variables: 35855
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 35855
  Number of nonzeros: 132332
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.3032510280609131
  Error rc: 0
  Time: 0.8116991519927979
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  108 s
Objective function value                   69.17 Mâ‚¬
Objective function value                   69.1739394936884
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc200
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc200']
Namespace(case='RTS24_mod1_ByStages_nc200', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc200', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  6 s
Generating generation capacity        ...  6 s
Generating network    capacity        ...  9 s
Generating network    constraints     ...  23 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 72.53600176141319
  Upper bound: 72.53600176141319
  Number of objectives: 1
  Number of constraints: 71003
  Number of variables: 47828
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 47807
  Number of nonzeros: 193265
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 420.23826003074646
  Error rc: 0
  Time: 420.9607448577881
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 72.53600176141337
  Upper bound: 72.53600176141337
  Number of objectives: 1
  Number of constraints: 71003
  Number of variables: 47807
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 47807
  Number of nonzeros: 176444
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.41175389289855957
  Error rc: 0
  Time: 1.0373802185058594
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  457 s
Objective function value                   72.54 Mâ‚¬
Objective function value                   72.53600176141337
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

RTS24_mod1_ByStages_nc250
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour
gurobi
['oSN_Main_DCOPF.py', '--case', 'RTS24_mod1_ByStages_nc250']
Namespace(case='RTS24_mod1_ByStages_nc250', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Namespace(case='RTS24_mod1_ByStages_nc250', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour', solver='gurobi')
Reading    input data                 ...  0 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  10 s
Generating generation capacity        ...  9 s
Generating network    capacity        ...  14 s
Generating network    constraints     ...  35 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 68.29245193870437
  Upper bound: 68.29245193870439
  Number of objectives: 1
  Number of constraints: 88753
  Number of variables: 59767
  Number of binary variables: 21
  Number of integer variables: 21
  Number of continuous variables: 59746
  Number of nonzeros: 241529
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 633.8416690826416
  Error rc: 0
  Time: 634.6782302856445
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,N_109,N_111,cac2]
fixing: vNetworkInvest[2030,N_116,N_117,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac2]
fixing: vNetworkInvest[2030,N_109,N_111,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac3]
fixing: vNetworkInvest[2030,N_118,N_121,cac3]
fixing: vNetworkInvest[2030,N_116,N_117,cac1]
fixing: vNetworkInvest[2030,N_117,N_118,cac2]
fixing: vNetworkInvest[2030,N_118,N_121,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac3]
fixing: vNetworkInvest[2030,N_106,N_108,cac2]
fixing: vNetworkInvest[2030,N_117,N_118,cac1]
fixing: vNetworkInvest[2030,N_118,N_121,cac1]
fixing: vNetworkInvest[2030,N_115,N_116,cac3]
fixing: vNetworkInvest[2030,N_103,N_124,cac3]
fixing: vNetworkInvest[2030,N_115,N_116,cac2]
fixing: vNetworkInvest[2030,N_106,N_108,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac2]
fixing: vNetworkInvest[2030,N_115,N_116,cac1]
fixing: vNetworkInvest[2030,N_103,N_124,cac1]
fixing: vNetworkInvest[2030,N_109,N_111,cac3]
Number of fixed variables:  21
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 68.29245193870443
  Upper bound: 68.29245193870443
  Number of objectives: 1
  Number of constraints: 88753
  Number of variables: 59746
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 59746
  Number of nonzeros: 220508
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.45185208320617676
  Error rc: 0
  Time: 1.1970672607421875
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  689 s
Objective function value                   68.29 Mâ‚¬
Objective function value                   68.29245193870443
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/K.Investments_per_hour/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list
['RTS24_mod1_ByStages_nc10', 'RTS24_mod1_ByStages_nc20', 'RTS24_mod1_ByStages_nc30', 'RTS24_mod1_ByStages_nc40', 'RTS24_mod1_ByStages_nc50', 'RTS24_mod1_ByStages_nc60', 'RTS24_mod1_ByStages_nc70', 'RTS24_mod1_ByStages_nc80', 'RTS24_mod1_ByStages_nc90', 'RTS24_mod1_ByStages_nc100', 'RTS24_mod1_ByStages_nc150', 'RTS24_mod1_ByStages_nc200', 'RTS24_mod1_ByStages_nc250']
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc10
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc20
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc30
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc40
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc50
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc60
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc70
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc80
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc90
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc100
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc150
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc200
python oSN_Main_DCOPF.py --case RTS24_mod1_ByStages_nc250
