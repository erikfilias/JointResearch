SLURM_JOB_ID: 56941870
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: IEEE118_mod1_fyts_curt
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r25i27n04
SLURM_JOB_CPUS_PER_NODE: 36
Date: Mon Aug 26 22:45:53 CEST 2024
Walltime: 01-00:00:00
========================================================================
Activation OK
Starting runs
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
30
40
60
70
80
90
150
30
40
60
70
80
90
150
30
40
60
70
80
90
150
30
40
60
70
80
90
150
30
40
60
70
80
90
150
