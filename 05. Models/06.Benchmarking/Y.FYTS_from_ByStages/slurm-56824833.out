SLURM_JOB_ID: 56824833
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: IEEE118_mod1_fyts_curt
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r25i13n16
SLURM_JOB_CPUS_PER_NODE: 36
Date: Fri Aug  9 23:28:37 CEST 2024
Walltime: 00-03:00:00
========================================================================
Activation OK
Starting runs
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/Y.FYTS_from_ByStages/createFYTS_v3.py:142: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  frame_values[unit] = fy_ts
slurmstepd: error: *** JOB 56824833 ON r25i13n16 CANCELLED AT 2024-08-10T02:29:02 DUE TO TIME LIMIT ***
