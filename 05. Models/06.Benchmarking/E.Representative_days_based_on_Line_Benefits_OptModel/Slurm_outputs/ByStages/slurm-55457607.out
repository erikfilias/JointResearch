SLURM_JOB_ID: 55457607
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: 118_by_stages_loop_E_10-100
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r22i13n07
SLURM_JOB_CPUS_PER_NODE: 36
Date: Fri Dec 22 17:32:11 CET 2023
Walltime: 03-00:00:00
========================================================================
Activation OK
Starting runs

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc10
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc10']
Namespace(case='IEEE118_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 784.9539616887378
  Upper bound: 791.983644930807
  Number of objectives: 1
  Number of constraints: 14513
  Number of variables: 10221
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 10176
  Number of nonzeros: 37117
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 420.7480969429016
  Error rc: 0
  Time: 421.29803109169006
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 791.9836449308123
  Upper bound: 791.9836449308123
  Number of objectives: 1
  Number of constraints: 14513
  Number of variables: 10176
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 10176
  Number of nonzeros: 35272
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.11666607856750488
  Error rc: 0
  Time: 0.36132073402404785
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  423 s
Objective function value                   791.98 Mâ‚¬
Objective function value                   791.9836449308123
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc20
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc20']
Namespace(case='IEEE118_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 972.5128106626316
  Upper bound: 980.349308535214
  Number of objectives: 1
  Number of constraints: 29023
  Number of variables: 20259
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 20214
  Number of nonzeros: 74023
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 2037.1662018299103
  Error rc: 0
  Time: 2037.7958056926727
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 980.3505024852182
  Upper bound: 980.3505024852182
  Number of objectives: 1
  Number of constraints: 29023
  Number of variables: 20214
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 20214
  Number of nonzeros: 70378
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.2874569892883301
  Error rc: 0
  Time: 1.301466941833496
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  2042 s
Objective function value                   980.35 Mâ‚¬
Objective function value                   980.3505024852182
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc30
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc30']
Namespace(case='IEEE118_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  2 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 983.0354354616057
  Upper bound: 991.6118951075334
  Number of objectives: 1
  Number of constraints: 43533
  Number of variables: 30523
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 30478
  Number of nonzeros: 111381
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 4819.597270011902
  Error rc: 0
  Time: 4820.651809692383
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 991.6118951075315
  Upper bound: 991.6118951075315
  Number of objectives: 1
  Number of constraints: 43533
  Number of variables: 30478
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 30478
  Number of nonzeros: 105936
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.3506650924682617
  Error rc: 0
  Time: 0.8139421939849854
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  4826 s
Objective function value                   991.61 Mâ‚¬
Objective function value                   991.6118951075315
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc40
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc40']
Namespace(case='IEEE118_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  4 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1012.9401765094653
  Upper bound: 1022.5592313264445
  Number of objectives: 1
  Number of constraints: 58043
  Number of variables: 40623
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 40578
  Number of nonzeros: 148411
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 7899.85064291954
  Error rc: 0
  Time: 7901.085525751114
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1022.5592313264439
  Upper bound: 1022.5592313264439
  Number of objectives: 1
  Number of constraints: 58043
  Number of variables: 40578
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 40578
  Number of nonzeros: 141166
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.45013880729675293
  Error rc: 0
  Time: 1.0077228546142578
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  7910 s
Objective function value                   1022.56 Mâ‚¬
Objective function value                   1022.5592313264439
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc50
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc50']
Namespace(case='IEEE118_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  2 s
Generating generation capacity        ...  2 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  6 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1069.788649280746
  Upper bound: 1080.5925789682678
  Number of objectives: 1
  Number of constraints: 72553
  Number of variables: 50760
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 50715
  Number of nonzeros: 185515
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 11522.267961025238
  Error rc: 0
  Time: 11523.403543710709
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1080.5925789690982
  Upper bound: 1080.5925789690982
  Number of objectives: 1
  Number of constraints: 72553
  Number of variables: 50715
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 50715
  Number of nonzeros: 176470
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.5624618530273438
  Error rc: 0
  Time: 1.232161045074463
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  11536 s
Objective function value                   1080.59 Mâ‚¬
Objective function value                   1080.5925789690982
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc60
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc60']
Namespace(case='IEEE118_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  3 s
Generating generation capacity        ...  2 s
Generating network    capacity        ...  3 s
Generating network    constraints     ...  9 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1078.7310305399626
  Upper bound: 1089.054381340027
  Number of objectives: 1
  Number of constraints: 87063
  Number of variables: 61073
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 61028
  Number of nonzeros: 222971
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 14236.237265110016
  Error rc: 0
  Time: 14237.580307245255
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1089.0543813414204
  Upper bound: 1089.0543813414204
  Number of objectives: 1
  Number of constraints: 87063
  Number of variables: 61028
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 61028
  Number of nonzeros: 212126
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.662207841873169
  Error rc: 0
  Time: 1.4330308437347412
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  14254 s
Objective function value                   1089.05 Mâ‚¬
Objective function value                   1089.0543813414204
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc70
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc70']
Namespace(case='IEEE118_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  4 s
Generating generation capacity        ...  3 s
Generating network    capacity        ...  4 s
Generating network    constraints     ...  12 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1158.737982881593
  Upper bound: 1170.2917123350846
  Number of objectives: 1
  Number of constraints: 101573
  Number of variables: 71162
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 71117
  Number of nonzeros: 259979
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 31092.689101934433
  Error rc: 0
  Time: 31094.097526073456
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1170.291712335083
  Upper bound: 1170.291712335083
  Number of objectives: 1
  Number of constraints: 101573
  Number of variables: 71117
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 71117
  Number of nonzeros: 247334
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.7643570899963379
  Error rc: 0
  Time: 1.6375811100006104
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  31116 s
Objective function value                   1170.29 Mâ‚¬
Objective function value                   1170.291712335083
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc80
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc80']
Namespace(case='IEEE118_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  4 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  5 s
Generating generation capacity        ...  4 s
Generating network    capacity        ...  6 s
Generating network    constraints     ...  15 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1194.3008748179031
  Upper bound: 1206.0455142939404
  Number of objectives: 1
  Number of constraints: 116083
  Number of variables: 81228
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 81183
  Number of nonzeros: 296941
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 48079.88560295105
  Error rc: 0
  Time: 48081.17970895767
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1206.045514293919
  Upper bound: 1206.045514293919
  Number of objectives: 1
  Number of constraints: 116083
  Number of variables: 81183
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 81183
  Number of nonzeros: 282496
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.8625779151916504
  Error rc: 0
  Time: 1.827993631362915
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  48109 s
Objective function value                   1206.05 Mâ‚¬
Objective function value                   1206.045514293919
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc90
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc90']
Namespace(case='IEEE118_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  1 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  4 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  6 s
Generating generation capacity        ...  5 s
Generating network    capacity        ...  7 s
Generating network    constraints     ...  19 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1222.5282009541993
  Upper bound: 1234.4528731777768
  Number of objectives: 1
  Number of constraints: 130593
  Number of variables: 91341
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 91296
  Number of nonzeros: 333997
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 52889.95220589638
  Error rc: 0
  Time: 52891.55162572861
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1234.4528731777834
  Upper bound: 1234.4528731777834
  Number of objectives: 1
  Number of constraints: 130593
  Number of variables: 91296
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 91296
  Number of nonzeros: 317752
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.0048770904541016
  Error rc: 0
  Time: 2.08610463142395
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  52925 s
Objective function value                   1234.45 Mâ‚¬
Objective function value                   1234.4528731777834
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc100
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc100']
Namespace(case='IEEE118_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  1 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  5 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  7 s
Generating generation capacity        ...  7 s
Generating network    capacity        ...  9 s
Generating network    constraints     ...  23 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1261.9376349855363
  Upper bound: 1274.6588428756208
  Number of objectives: 1
  Number of constraints: 145103
  Number of variables: 101335
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 101290
  Number of nonzeros: 370815
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 79564.41552305222
  Error rc: 0
  Time: 79565.92168283463
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1274.6588428756281
  Upper bound: 1274.6588428756281
  Number of objectives: 1
  Number of constraints: 145103
  Number of variables: 101290
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 101290
  Number of nonzeros: 352770
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.0686969757080078
  Error rc: 0
  Time: 2.2823565006256104
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  79607 s
Objective function value                   1274.66 Mâ‚¬
Objective function value                   1274.6588428756281
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list
['IEEE118_ByStages_nc10', 'IEEE118_ByStages_nc20', 'IEEE118_ByStages_nc30', 'IEEE118_ByStages_nc40', 'IEEE118_ByStages_nc50', 'IEEE118_ByStages_nc60', 'IEEE118_ByStages_nc70', 'IEEE118_ByStages_nc80', 'IEEE118_ByStages_nc90', 'IEEE118_ByStages_nc100']
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc10
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc20
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc30
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc40
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc50
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc60
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc70
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc80
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc90
python oSN_Main_DCOPF.py --case IEEE118_ByStages_nc100
