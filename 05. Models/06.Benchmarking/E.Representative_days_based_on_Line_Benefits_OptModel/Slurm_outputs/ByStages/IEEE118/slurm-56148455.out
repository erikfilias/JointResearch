SLURM_JOB_ID: 56148455
SLURM_JOB_USER: vsc34888
SLURM_JOB_ACCOUNT: lp_elect_gen_modeling
SLURM_JOB_NAME: 118_by_stages_loop_E_10-100
SLURM_CLUSTER_NAME: genius
SLURM_JOB_PARTITION: batch
SLURM_NNODES: 1
SLURM_NODELIST: r22i27n21
SLURM_JOB_CPUS_PER_NODE: 36
Date: Fri Apr 26 16:46:00 CEST 2024
Walltime: 03-00:00:00
========================================================================
Activation OK
Starting runs

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc10
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc10']
Namespace(case='IEEE118_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc10', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  0 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  0 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 785.2456741390844
  Upper bound: 791.9836449308129
  Number of objectives: 1
  Number of constraints: 14513
  Number of variables: 10221
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 10176
  Number of nonzeros: 37117
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 465.0716280937195
  Error rc: 0
  Time: 465.5396249294281
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 791.9836449308143
  Upper bound: 791.9836449308143
  Number of objectives: 1
  Number of constraints: 14513
  Number of variables: 10176
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 10176
  Number of nonzeros: 35272
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.14243507385253906
  Error rc: 0
  Time: 0.4944338798522949
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  467 s
Objective function value                   791.98 Mâ‚¬
Objective function value                   791.9836449308143
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc20
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc20']
Namespace(case='IEEE118_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc20', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  0 s
Generating generation capacity        ...  0 s
Generating network    capacity        ...  0 s
Generating network    constraints     ...  1 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 970.8047576790862
  Upper bound: 980.345697955483
  Number of objectives: 1
  Number of constraints: 29023
  Number of variables: 20259
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 20214
  Number of nonzeros: 74023
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 2132.50083899498
  Error rc: 0
  Time: 2133.168533563614
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 980.3505024852165
  Upper bound: 980.3505024852165
  Number of objectives: 1
  Number of constraints: 29023
  Number of variables: 20214
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 20214
  Number of nonzeros: 70378
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.2896590232849121
  Error rc: 0
  Time: 0.677490234375
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  2136 s
Objective function value                   980.35 Mâ‚¬
Objective function value                   980.3505024852165
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc30
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc30']
Namespace(case='IEEE118_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc30', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  1 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  1 s
Generating network    constraints     ...  2 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 983.1115432615317
  Upper bound: 991.6118951075296
  Number of objectives: 1
  Number of constraints: 43533
  Number of variables: 30523
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 30478
  Number of nonzeros: 111381
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 4369.311979055405
  Error rc: 0
  Time: 4370.294176340103
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 991.6118951075302
  Upper bound: 991.6118951075302
  Number of objectives: 1
  Number of constraints: 43533
  Number of variables: 30478
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 30478
  Number of nonzeros: 105936
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.3641691207885742
  Error rc: 0
  Time: 0.8598124980926514
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  4376 s
Objective function value                   991.61 Mâ‚¬
Objective function value                   991.6118951075302
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc40
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc40']
Namespace(case='IEEE118_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc40', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  1 s
Generating generation capacity        ...  1 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  4 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1012.8294522525541
  Upper bound: 1022.5592313264463
  Number of objectives: 1
  Number of constraints: 58043
  Number of variables: 40623
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 40578
  Number of nonzeros: 148411
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 8012.742282867432
  Error rc: 0
  Time: 8013.945169687271
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1022.559231326445
  Upper bound: 1022.559231326445
  Number of objectives: 1
  Number of constraints: 58043
  Number of variables: 40578
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 40578
  Number of nonzeros: 141166
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.45600008964538574
  Error rc: 0
  Time: 1.045227289199829
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  8023 s
Objective function value                   1022.56 Mâ‚¬
Objective function value                   1022.559231326445
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc50
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc50']
Namespace(case='IEEE118_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc50', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  2 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  2 s
Generating generation capacity        ...  2 s
Generating network    capacity        ...  2 s
Generating network    constraints     ...  6 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1069.8913632727506
  Upper bound: 1080.592578969094
  Number of objectives: 1
  Number of constraints: 72553
  Number of variables: 50760
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 50715
  Number of nonzeros: 185515
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 10807.360881090164
  Error rc: 0
  Time: 10808.688784599304
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1080.5925789690973
  Upper bound: 1080.5925789690973
  Number of objectives: 1
  Number of constraints: 72553
  Number of variables: 50715
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 50715
  Number of nonzeros: 176470
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.5586109161376953
  Error rc: 0
  Time: 1.2833583354949951
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  10822 s
Objective function value                   1080.59 Mâ‚¬
Objective function value                   1080.5925789690973
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc60
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc60']
Namespace(case='IEEE118_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc60', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  3 s
Generating generation capacity        ...  3 s
Generating network    capacity        ...  3 s
Generating network    constraints     ...  9 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1078.8007486086697
  Upper bound: 1089.0543813414251
  Number of objectives: 1
  Number of constraints: 87063
  Number of variables: 61073
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 61028
  Number of nonzeros: 222971
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 13099.489398002625
  Error rc: 0
  Time: 13100.961220502853
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1089.0543813414206
  Upper bound: 1089.0543813414206
  Number of objectives: 1
  Number of constraints: 87063
  Number of variables: 61028
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 61028
  Number of nonzeros: 212126
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.6484291553497314
  Error rc: 0
  Time: 1.4786043167114258
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  13119 s
Objective function value                   1089.05 Mâ‚¬
Objective function value                   1089.0543813414206
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  0 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc70
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc70']
Namespace(case='IEEE118_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc70', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  0 s
Generating operation & investment     ...  0 s
Generating balance                    ...  3 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  4 s
Generating generation capacity        ...  3 s
Generating network    capacity        ...  4 s
Generating network    constraints     ...  12 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1159.4572679249893
  Upper bound: 1170.2917123350742
  Number of objectives: 1
  Number of constraints: 101573
  Number of variables: 71162
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 71117
  Number of nonzeros: 259979
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 32846.66541695595
  Error rc: 0
  Time: 32847.60009145737
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1170.2917123350846
  Upper bound: 1170.2917123350846
  Number of objectives: 1
  Number of constraints: 101573
  Number of variables: 71117
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 71117
  Number of nonzeros: 247334
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.7668349742889404
  Error rc: 0
  Time: 1.678961992263794
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  32871 s
Objective function value                   1170.29 Mâ‚¬
Objective function value                   1170.2917123350846
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc80
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc80']
Namespace(case='IEEE118_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc80', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  0 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  4 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  5 s
Generating generation capacity        ...  4 s
Generating network    capacity        ...  6 s
Generating network    constraints     ...  16 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1194.1463344050544
  Upper bound: 1206.0455142939238
  Number of objectives: 1
  Number of constraints: 116083
  Number of variables: 81228
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 81183
  Number of nonzeros: 296941
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 47654.14983510971
  Error rc: 0
  Time: 47655.46875119209
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1206.0455142939206
  Upper bound: 1206.0455142939206
  Number of objectives: 1
  Number of constraints: 116083
  Number of variables: 81183
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 81183
  Number of nonzeros: 282496
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 0.8574659824371338
  Error rc: 0
  Time: 2.217695474624634
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  47685 s
Objective function value                   1206.05 Mâ‚¬
Objective function value                   1206.0455142939206
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc90
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc90']
Namespace(case='IEEE118_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc90', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  1 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  5 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  6 s
Generating generation capacity        ...  6 s
Generating network    capacity        ...  7 s
Generating network    constraints     ...  20 s
Econometric analysis  constraints     ...  0 s
Termination condition:  optimal
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1222.146221161243
  Upper bound: 1234.452873177784
  Number of objectives: 1
  Number of constraints: 130593
  Number of variables: 91341
  Number of binary variables: 45
  Number of integer variables: 45
  Number of continuous variables: 91296
  Number of nonzeros: 333997
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 55324.70868706703
  Error rc: 0
  Time: 55326.486414670944
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
# ============================================================================= #
# ============================================================================= #
fixing: vNetworkInvest[2030,bus003,bus005,cac2]
fixing: vNetworkInvest[2030,bus033,bus037,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac2]
fixing: vNetworkInvest[2030,bus082,bus083,cac2]
fixing: vNetworkInvest[2030,bus012,bus117,cac1]
fixing: vNetworkInvest[2030,bus001,bus003,cac1]
fixing: vNetworkInvest[2030,bus023,bus024,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac1]
fixing: vNetworkInvest[2030,bus080,bus099,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac1]
fixing: vNetworkInvest[2030,bus017,bus113,cac1]
fixing: vNetworkInvest[2030,bus005,bus006,cac1]
fixing: vNetworkInvest[2030,bus025,bus027,cac1]
fixing: vNetworkInvest[2030,bus038,bus037,cac1]
fixing: vNetworkInvest[2030,bus015,bus033,cac1]
fixing: vNetworkInvest[2030,bus093,bus094,cac2]
fixing: vNetworkInvest[2030,bus068,bus069,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac1]
fixing: vNetworkInvest[2030,bus008,bus030,cac1]
fixing: vNetworkInvest[2030,bus030,bus038,cac1]
fixing: vNetworkInvest[2030,bus023,bus032,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac1]
fixing: vNetworkInvest[2030,bus099,bus100,cac2]
fixing: vNetworkInvest[2030,bus008,bus005,cac1]
fixing: vNetworkInvest[2030,bus094,bus100,cac2]
fixing: vNetworkInvest[2030,bus080,bus099,cac2]
fixing: vNetworkInvest[2030,bus017,bus113,cac2]
fixing: vNetworkInvest[2030,bus005,bus006,cac2]
fixing: vNetworkInvest[2030,bus038,bus037,cac2]
fixing: vNetworkInvest[2030,bus015,bus033,cac2]
fixing: vNetworkInvest[2030,bus025,bus027,cac2]
fixing: vNetworkInvest[2030,bus003,bus005,cac1]
fixing: vNetworkInvest[2030,bus015,bus017,cac1]
fixing: vNetworkInvest[2030,bus065,bus068,cac1]
fixing: vNetworkInvest[2030,bus068,bus069,cac2]
fixing: vNetworkInvest[2030,bus038,bus065,cac1]
fixing: vNetworkInvest[2030,bus082,bus083,cac1]
fixing: vNetworkInvest[2030,bus069,bus077,cac2]
fixing: vNetworkInvest[2030,bus026,bus030,cac2]
fixing: vNetworkInvest[2030,bus077,bus082,cac1]
fixing: vNetworkInvest[2030,bus008,bus005,cac2]
fixing: vNetworkInvest[2030,bus074,bus075,cac1]
Number of fixed variables:  45
# ============================================================================= #
# ============================================================================= #
WARNING: Implicitly replacing the Component attribute dual (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
WARNING: Implicitly replacing the Component attribute rc (type=<class
'pyomo.core.base.suffix.Suffix'>) on block 'openStarNet - Open Version of the
StartNetLite Model (Long Term Transmission Expansion Planning) - Version 1.0.0
- January 16, 2023' with a new Component (type=<class
'pyomo.core.base.suffix.Suffix'>). This is usually indicative of a modelling
error. To avoid this warning, use block.del_component() and
block.add_component().
# ==========================================================
# = Solver Results                                         =
# ==========================================================
# ----------------------------------------------------------
#   Problem Information
# ----------------------------------------------------------
Problem: 
- Name: x1
  Lower bound: 1234.4528731777837
  Upper bound: 1234.4528731777837
  Number of objectives: 1
  Number of constraints: 130593
  Number of variables: 91296
  Number of binary variables: 0
  Number of integer variables: 0
  Number of continuous variables: 91296
  Number of nonzeros: 317752
  Sense: minimize
# ----------------------------------------------------------
#   Solver Information
# ----------------------------------------------------------
Solver: 
- Status: ok
  Return code: 0
  Message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Termination condition: optimal
  Termination message: Model was solved to optimality (subject to tolerances), and an optimal solution is available.
  Wall time: 1.0333499908447266
  Error rc: 0
  Time: 2.520000696182251
# ----------------------------------------------------------
#   Solution Information
# ----------------------------------------------------------
Solution: 
- number of solutions: 0
  number of solutions displayed: 0
Solving                               ...  55363 s
Objective function value                   1234.45 Mâ‚¬
Objective function value                   1234.4528731777837
Writing         cost summary results  ...  0 s
Writing           investment results  ...  0 s
Writing    network operation results  ...  0 s
Writing generation operation results  ...  1 s
Writing        ESS operation results  ...  0 s
Traceback (most recent call last):
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1695, in <module>
    main(openStarNet)
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 137, in main
    model = saving_results(args.dir, args.case, args.solver, model, model)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel/oSN_Main_DCOPF.py", line 1667, in saving_results
    OutputResults = pd.Series(data=[optmodel.dual[optmodel.eBalanceP[p,sc,st,n,nd]]*1e3/model.pScenProb[p,sc]()/model.pLoadLevelDuration[n]() for p,sc,n,nd,st in dual_eBalance_list], index=pd.MultiIndex.from_tuples(dual_eBalance_list))
                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 205, in new_meth
    return meth(self_or_cls, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/leuven/348/vsc34888/miniconda3/envs/Jr23/lib/python3.11/site-packages/pandas/core/indexes/multi.py", line 565, in from_tuples
    raise TypeError("Cannot infer number of levels from empty list")
TypeError: Cannot infer number of levels from empty list

 #### Academic research license - for non-commercial use only #### 

IEEE118_ByStages_nc100
/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel
gurobi
['oSN_Main_DCOPF.py', '--case', 'IEEE118_ByStages_nc100']
Namespace(case='IEEE118_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Namespace(case='IEEE118_ByStages_nc100', dir='/lustre1/scratch/348/vsc34888/JointResearch/05.Models/06.Benchmarking/E.Representative_days_based_on_Line_Benefits_OptModel', solver='gurobi')
Reading    input data                 ...  1 s
Setting up input data                 ...  1 s
Generating objective function         ...  1 s
Generating operation & investment     ...  0 s
Generating balance                    ...  5 s
Generating storage operation          ...  0 s
Generating generation commitment      ...  8 s
Generating generation capacity        ...  7 s
Generating network    capacity        ...  9 s
Generating network    constraints     ...  24 s
Econometric analysis  constraints     ...  0 s
slurmstepd: error: *** JOB 56148455 ON r22i27n21 CANCELLED AT 2024-04-29T16:45:58 DUE TO TIME LIMIT ***
